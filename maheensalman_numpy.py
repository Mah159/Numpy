# -*- coding: utf-8 -*-
"""MaheenSalman_PythonLibraries1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pYVbsKjigin3LKHne406QX9gAwAtnEAH

1. Create a numpy array of size 10, filled with zeros
"""

import numpy as np

zeros_array = np.zeros(10)
print(zeros_array)

"""2. Create a numpy array with values ranging from 10 to 49"""

#once import numpy is defined as np, we dont need to define it again
array_10_to_49 = np.arange(10, 50)
print(array_10_to_49)

"""3. Create a numpy matrix of 2*2 integers, filled with ones"""

ones_matrix = np.ones((2, 2), dtype=int)
print(ones_matrix)

"""4. Create a numpy matrix of 3*2 float numbers, filled with ones"""

ones_float_matrix = np.ones((3, 2), dtype=float)
print(ones_float_matrix)

"""5. Given the X numpy array, create a new numpy array with the same shape and type as X, filled with ones."""

X = np.array([[1, 2, 3],[4, 5, 6]]) #array X is defined
ones = np.ones_like(X) #array called ones with the same shape and type as X filled with ones is made using X array
print(ones)

"""6. Given the X numpy matrix, create a new numpy matrix with the same shape and type as X, filled with zeros."""

X = np.array([[1, 2], [3, 4]]) #array X is defined
zeros = np.zeros_like(X) #matrix called ones with the same shape and type as X filled with zeros is made
print(zeros)

"""7. Create a numpy matrix of 4*4 integers, filled with fives"""

fives = np.full((4, 4), 5, dtype=int) #a 4x4 matrix filled with fives defined
print(fives)

"""8. Given the X numpy matrix, create a new numpy matrix with the same shape and type as X, filled with sevens."""

X = np.array([[1, 2], [3, 4]]) #array X is defined
sevens = np.full_like(X, 7) #a matrix called with the same shape and type as X filled with sevens is made
print(sevens)

"""9. Create a 3*3 identity numpy matrix with ones on the diagonal and zeros elsewhere."""

identity_matrix = np.eye(3) #a 3x3 identity matrix is made
print(identity_matrix)

"""10. Create a numpy array, filled with 3 random integer values between 1 and 10"""

random = np.random.randint(1, 11, size=3)#a NumPy array called random with 3 random integers between 1 and 10 is defined
print(random)

"""11. Create a 3*3*3 numpy matrix, filled with random float values."""

random = np.random.rand(3, 3, 3) #a 3x3x3 matrix called random filled with random float values is made
print(random)

"""12. Create a numpy array with numbers from 1 to 10"""

array = np.arange(1, 11) #a NumPy array called array with numbers from 1 to 10 is defined
print(array)

"""13. Create a numpy array with the odd numbers between 1 to 10"""

odd= np.arange(1, 11, 2) #a NumPy array called odd with odd numbers from 1 to 10 is defined
print(odd)

"""14. Create a numpy array with numbers from 1 to 10, in descending order."""

desc_array = np.arange(10, 0, -1) #a NumPy array with numbers from 1 to 10 in descending order is defined
print(desc_array)

"""15. Create a 3*3 numpy matrix, filled with values ranging from 0 to 8"""

matrix_3x3 = np.arange(9).reshape(3, 3) #a 3x3 numpy matrix with values ranging from 0 to 8 is made
print(matrix_3x3)

"""Array indexation
1. Given the X numpy array, show it's first element
"""

X = np.array([1, 2, 3, 4, 5]) #defining X as a numpy array
first = X[0] #displaying the first element of the array
print(first)

"""2. Given the X numpy array, show it's last element"""

X = np.array([1, 2, 3, 4, 5]) #defining X as a numpy array
last = X[-1] #displaying the last element of the array
print(last)

"""3. Given the X numpy array, show it's first three elements"""

X = np.array([1, 2, 3, 4, 5]) #defining X as a numpy array
three = X[:3] #displaying the first three elements of the array
print(three)

"""4. Given the X numpy array, show all middle elements"""

X = np.array([1, 2, 3, 4, 5]) #defining X as a numpy array
middle= X[1:-1] #displaying all middle elements of the array
print(middle)

"""5. Given the X numpy array, show the elements in reverse position."""

X = np.array([1, 2, 3, 4, 5]) #defining X as a numpy array
reverse = X[::-1] #displaying the elements in reverse position
print(reverse)

"""6. Given the X numpy array, show the elements in an odd position."""

X = np.array([1, 2, 3, 4, 5]) #defining X as a numpy array
odd = X[1::2] #displaying the elements in odd positions
print(odd)

"""7. Given the X numpy matrix, show the first row elements."""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
first_row_elements = X[0] #displaying the first row elements
print(first_row_elements)

"""8. Given the X numpy matrix, show the last row elements."""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
last_row_elements = X[-1] #displaying the last row elements
print(last_row_elements)

"""9. Given the X numpy matrix, show the first element on first row"""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
first= X[0, 0] #displaying the first element on the first row
print(first)

"""10. Given the X numpy matrix, show the last element on last row."""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
last = X[-1, -1] #display the last element on the last row
print(last)

"""11. Given the X numpy matrix, show the first two elements on the first two rows."""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
first_two = X[:2, :2] #displaying the first two elements on the first two rows
print(first_two)

"""12. Given the X numpy matrix, show the last two elements on the last two rows"""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
last_two = X[-2:, -2:] #displaying the last two elements on the last two rows
print(last_two)

"""Array manipulation
1. Convert the given integer numpy array to float
"""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
float_array = X.astype(float) #converting the integer array to float
print(float_array)

"""2. Reverse the given numpy array (first element becomes last)"""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
reverse = X[::-1] #reversing the numpy array
print(reverse)

"""3. Given the X numpy array, set the fifth element equal to 1"""

X = np.array([0, 0, 0, 0, 0, 0, 0]) #assuming X is your numpy array
X[4] = 1 #setting the fifth element to 1
print(X)

"""4. Given the X numpy matrix, change the last row with all 1"""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
X[-1] = 1 #changing the last row to all ones
print(X)

"""5. Given the X numpy matrix, add 5 to every element"""

X = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) #defining X as a numpy array
X = X + 5 #adding 5 to every element
print(X)